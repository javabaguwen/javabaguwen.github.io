(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{347:function(s,t,a){"use strict";a.r(t);var n=a(4),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("p",[s._v("synchronized作为Java程序员最常用同步工具，很多人却对它的用法和实现原理一知半解，以至于还有不少人认为synchronized是重量级锁，性能较差，尽量少用。")]),s._v(" "),t("p",[s._v("但不可否认的是synchronized依然是并发首选工具，连volatile、CAS、ReentrantLock都无法动摇synchronized的地位。synchronized是工作面试中的必备技能，今天就跟着一灯一块深入剖析synchronized的底层原理。")]),s._v(" "),t("h2",{attrs:{id:"_1-synchronized作用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-synchronized作用"}},[s._v("#")]),s._v(" 1. synchronized作用")]),s._v(" "),t("p",[s._v("synchronized是Java提供一种隐式锁，无需开发者手动加锁释放锁。保证多线程并发情况下数据的安全性，实现了同一个时刻只有一个线程能访问资源，其他线程只能阻塞等待，简单说就是互斥同步。")]),s._v(" "),t("h2",{attrs:{id:"_2-synchronized用法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-synchronized用法"}},[s._v("#")]),s._v(" 2. synchronized用法")]),s._v(" "),t("p",[s._v("先看一下synchronized有哪几种用法？")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[t("strong",[s._v("使用位置")])]),s._v(" "),t("th",[t("strong",[s._v("被锁对象")])]),s._v(" "),t("th",[t("strong",[s._v("示例代码")])])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("实例方法")]),s._v(" "),t("td",[t("code",[s._v("实例对象")])]),s._v(" "),t("td",[s._v("public synchronized void method() {"),t("br"),s._v("    ……"),t("br"),s._v("}")])]),s._v(" "),t("tr",[t("td",[s._v("静态方法")]),s._v(" "),t("td",[t("code",[s._v("class类")])]),s._v(" "),t("td",[s._v("public static synchronized void method() {"),t("br"),s._v("    ……"),t("br"),s._v("}")])]),s._v(" "),t("tr",[t("td",[s._v("实例对象")]),s._v(" "),t("td",[t("code",[s._v("实例对象")])]),s._v(" "),t("td",[s._v("public void method() {"),t("br"),s._v("    Object obj = new Object();"),t("br"),s._v("    synchronized (obj) {"),t("br"),s._v("        ……"),t("br"),s._v("    }"),t("br"),s._v("}")])]),s._v(" "),t("tr",[t("td",[s._v("类对象")]),s._v(" "),t("td",[t("code",[s._v("class类")])]),s._v(" "),t("td",[s._v("public void method() {"),t("br"),s._v("    synchronized (Demo.class) {"),t("br"),s._v("        ……"),t("br"),s._v("    }"),t("br"),s._v("}")])]),s._v(" "),t("tr",[t("td",[s._v("this关键字")]),s._v(" "),t("td",[t("code",[s._v("实例对象")])]),s._v(" "),t("td",[s._v("public void method() {"),t("br"),s._v("    synchronized (this) {"),t("br"),s._v("        ……"),t("br"),s._v("    }"),t("br"),s._v("}")])])])]),s._v(" "),t("p",[s._v("可以看到被锁对象只要有两种，实例对象和class类。")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("由于静态方法可以通过类名直接访问，所以它跟直接加锁在class类上是一样的。")])]),s._v(" "),t("li",[t("p",[s._v("当在实例方法、实例对象、this关键字上面加锁的时候，锁定范围都是当前实例对象。")])]),s._v(" "),t("li",[t("p",[s._v("实例对象上面的锁和class类上面的锁，两者不互斥。")])])]),s._v(" "),t("h2",{attrs:{id:"_3-synchronized加锁原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-synchronized加锁原理"}},[s._v("#")]),s._v(" 3. synchronized加锁原理")]),s._v(" "),t("p",[s._v("当我们使用synchronized在方法和对象上加锁的时候，Java底层到底怎么实现加锁的？")]),s._v(" "),t("p",[s._v("当在类对象上加锁的时候，也就是在class类加锁，代码如下：")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n * @author 一灯架构\n * @apiNote Synchronized示例\n **/")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SynchronizedDemo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("method")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("synchronized")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SynchronizedDemo")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello world!"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br")])]),t("p",[s._v("反编译一下，看一下源码实现：")]),s._v(" "),t("p",[t("img",{attrs:{src:"/Users/alsc/Documents/yideng-article/src/main/java/com/yideng/blog/img/image-20221004212041671.png",alt:"image-20221004212041671"}})]),s._v(" "),t("p",[s._v("可以看到，底层是通过"),t("strong",[s._v("monitorenter")]),s._v("和"),t("strong",[s._v("monitorexit")]),s._v("两个关键字实现的加锁与释放锁，执行同步代码之前使用"),t("strong",[s._v("monitorenter")]),s._v("加锁，执行完同步代码使用"),t("strong",[s._v("monitorexit")]),s._v("释放锁，抛出异常的时候也是用"),t("strong",[s._v("monitorexit")]),s._v("释放锁。")]),s._v(" "),t("p",[s._v("写成伪代码，类似下面这样：")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n * @author 一灯架构\n * @apiNote Synchronized示例\n **/")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SynchronizedDemo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("method")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            monitorenter 加锁"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello world!"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            monitorexit 释放锁"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("catch")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Exception")]),s._v(" e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            monitorexit 释放锁"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br")])]),t("p",[s._v("当在实例方法上加锁，底层是怎么实现的呢？代码如下：")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n * @author 一灯架构\n * @apiNote Synchronized示例\n **/")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SynchronizedDemo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("synchronized")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("method")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello world!"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("p",[s._v("再反编译看一下底层实现：")]),s._v(" "),t("p",[t("img",{attrs:{src:"/Users/alsc/Documents/yideng-article/src/main/java/com/yideng/blog/img/image-20221004212956815.png",alt:"image-20221004212956815"}})]),s._v(" "),t("p",[s._v("这次只使用了一个"),t("strong",[s._v("ACC_SYNCHRONIZED")]),s._v("关键字，实现了隐式的加锁与释放锁。其实无论是"),t("strong",[s._v("ACC_SYNCHRONIZED")]),s._v("关键字，还是"),t("strong",[s._v("monitorenter")]),s._v("和"),t("strong",[s._v("monitorexit")]),s._v("，底层都是通过获取"),t("strong",[s._v("monitor锁")]),s._v("来实现的加锁与释放锁。")]),s._v(" "),t("p",[s._v("而"),t("strong",[s._v("monitor锁")]),s._v("又是通过"),t("strong",[s._v("ObjectMonitor")]),s._v("来实现的，虚拟机中ObjectMonitor数据结构如下（C++实现的）：")]),s._v(" "),t("div",{staticClass:"language-ini line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-ini"}},[t("code",[s._v("ObjectMonitor() {\n    "),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("_header")]),s._v("       "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("NULL;")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("_count")]),s._v("        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("0; // WaitSet 和 EntryList 的节点数之和")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("_waiters")]),s._v("      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("0,")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("_recursions")]),s._v("   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("0; // 重入次数")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("_object")]),s._v("       "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("NULL;")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("_owner")]),s._v("        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("NULL; // 持有锁的线程")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("_WaitSet")]),s._v("      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("NULL; // 处于wait状态的线程，会被加入到_WaitSet")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("_WaitSetLock")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("0 ;")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("_Responsible")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("NULL ;")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("_succ")]),s._v("         "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("NULL ;")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("_cxq")]),s._v("          "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("NULL ; // 多个线程争抢锁，会先存入这个单向链表")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("FreeNext")]),s._v("      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("NULL ;")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("_EntryList")]),s._v("    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("NULL ; // 处于等待锁block状态的线程，会被加入到该列表")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("_SpinFreq")]),s._v("     "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("0 ;")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("_SpinClock")]),s._v("    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("0 ;")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("OwnerIsThread")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("0 ;")]),s._v("\n  }\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br")])]),t("p",[t("img",{attrs:{src:"/Users/alsc/Documents/yideng-article/src/main/java/com/yideng/blog/img/image-20221020100746704.png",alt:"image-20221020100746704"}})]),s._v(" "),t("p",[s._v("图上展示了ObjectMonitor的基本工作机制：")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("当多个线程同时访问一段同步代码时，首先会进入 _EntryList 队列中等待。")])]),s._v(" "),t("li",[t("p",[s._v("当某个线程获取到对象的Monitor锁后进入临界区域，并把Monitor中的 _owner 变量设置为当前线程，同时Monitor中的计数器 _count 加1。即获得对象锁。")])]),s._v(" "),t("li",[t("p",[s._v("若持有Monitor的线程调用 wait() 方法，将释放当前持有的Monitor锁，_owner变量恢复为null，_count减1，同时该线程进入 _WaitSet 集合中等待被唤醒。")])]),s._v(" "),t("li",[t("p",[s._v("在_WaitSet 集合中的线程会被再次放到_EntryList 队列中，重新竞争获取锁。")])]),s._v(" "),t("li",[t("p",[s._v("若当前线程执行完毕也将释放Monitor并复位变量的值，以便其他线程进入获取锁。")])])]),s._v(" "),t("p",[s._v("线程争抢锁的过程要比上面展示得更加复杂。除了_EntryList 这个双向链表用来保存竞争的线程，ObjectMonitor中还有另外一个单向链表 _cxq，由两个队列来共同管理并发的线程。")]),s._v(" "),t("p",[t("img",{attrs:{src:"/Users/alsc/Documents/yideng-article/src/main/java/com/yideng/blog/img/image-20221004234408490.png",alt:"image-20221004234408490"}})]),s._v(" "),t("p",[s._v("下篇再讲一下Synchronized锁优化的过程。")]),s._v(" "),t("blockquote",[t("p",[t("strong",[s._v("我是「一灯架构」，如果本文对你有帮助，欢迎各位小伙伴点赞、评论和关注，感谢各位老铁，我们下期见")])])])])}),[],!1,null,null,null);t.default=e.exports}}]);